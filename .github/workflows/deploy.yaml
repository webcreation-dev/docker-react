name: Deploy Frontend

# Déclenchement du workflow
on:
  push:
    branches:
      - main # Vérifiez que votre branche principale est bien "main". Sinon, utilisez "master" ou une autre.

jobs:
  build:
    # Spécifie l'environnement
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Connexion à Docker Hub
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Étape 3 : Construire l'image Docker avec Dockerfile.dev
      - name: Build Docker image
        run: docker build -t cygnetops/react-test -f Dockerfile.dev .

      # Étape 4 : Exécuter les tests avec Docker
      - name: Run tests
        run: docker run -e CI=true cygnetops/react-test npm test

      # Étape 5 : Générer un fichier de déploiement
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      # Étape 6 : Déploiement sur Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: frontend # Changez le nom si nécessaire
          environment_name: Frontend-env # Nom de l'environnement Elastic Beanstalk
          existing_bucket_name: elasticbeanstalk-eu-north-1-586794465350 # Nom du bucket S3 existant
          region: eu-north-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
